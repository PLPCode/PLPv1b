/*Variable for Import the File*/

#include <iostream>
#include <string>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include "System"
#include "Type"
using namespace std;
#include <fstream>
#include <Windows.h>
#define reader return 0;
#define readers cin.get();
#define readerch getchar()
#define getkey getch()
#define readerf _fgetchar()
#define sent cin >>
#define sent cin >> 
#define print cout << 
#define println cout << endl << 
#define PRINT cout << 
#define Print cout << 
#define intotext intToString 
#define length length()
#define space using namespace std;
#define Math using namespace std;in main(){ print 
#define _ using namespace std;in main(){
#define Game using namespace std; using namespace game; in main(){
#define Windows using namespace std;in main(){
#define reg using namespace std;using namespace Reg;in main(){
#define nline endl
#define selector switch
#define found std::string::npos
#define PI 3.141592653589793
#define dq '"'
#define End } 
#define colorBlack SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 0);
#define colorBlue SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 1);
#define colorGreen SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 2);
#define colorCyan SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 3);
#define colorRed SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 4);
#define colorPurple SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 5);
#define colorYellow SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 6);
#define colorWhite SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 7);
#define colorGray SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 8);
#define ringf for(
#define system system(
#define printf printf(
#define def typedef
#define ring if(
#define line __LINE__
#define ringw while(
#define backring else
#define Cstr c_str()
#define fixed const
#define FullScreen ShowWindow(GetConsoleWindow(),SW_MAXIMIZE);
#define fullscreen ShowWindow(GetConsoleWindow(),SW_MAXIMIZE);
#define FullWindowScreen NT_SetConsoleDisplayMode( GetStdHandle( STD_OUTPUT_HANDLE ), 1 );
#define fullwindowscreen NT_SetConsoleDisplayMode( GetStdHandle( STD_OUTPUT_HANDLE ), 1 );
#define F$ const char *
#define sizeis sizeof
#define option case
#define assembly _asm{
#define Assembly _asm{
#define bp _asm{ int 3 }
#define OpenWindow ShellExecute
/*Num Key Code*/
#define	F1 VK_F1
#define F2 VK_F2
#define F3 VK_F3
#define F4 VK_F4
#define F5 VK_F5
#define F6 VK_F6
#define F7 VK_F7
#define F8 VK_F8
#define F9 VK_F9
#define F10 VK_F10
#define F11 VK_F11
#define F12 VK_F12
#define Ctrl VK_CONTROL
#define ArrowUp VK_UP
#define ArrowDown VK_DOWN
#define ArrowRight VK_RIGHT
#define ArrowLeft VK_LEFT
#define Shift VK_SHIFT
#define Alt VK_MENU
#define Win VK_LWIN
#define Tab VK_TAB
#define CapsLocks VK_CAPITAL 
#define NumLocks VK_NUMLOCK
#define cF1 0x70
#define cF2 0x71
#define cF3 0x72
#define cF4 0x73
#define cF5 0x74
#define cF6 0x75
#define cF7 0x76
#define cF8 0x77
#define cF9 0x78
#define cF10 0x79
#define cF11 0x7A
#define cF12 0x7B
#define cCtrl 0x9D
#define cArrowUp 0x26
#define cArrowDown 0x28
#define cArrowRight 0x27
#define cArrowLeft 0x25
#define cShift 0x10
#define cAlt 0xB8
#define cWin 0x5B
#define cTab 0x8F
#define cCapsLocks 0x14	
#define cNumLocks 0x90
#define Enter 0x9C
#define Space 0x20
/*Mouse event*/
#define LeftUp_click MOUSEEVENTF_LEFTUP
#define mouse_Absolute MOUSEEVENTF_ABSOLUTE
#define LeftDown_click MOUSEEVENTF_LEFTDOWN
#define MiddleDown_click MOUSEEVENTF_MIDDLEDOWN
#define MiddleUp_click MOUSEEVENTF_MIDDLEUP
#define mouse_Move MOUSEEVENTF_MOVE
#define RightDown_click MOUSEEVENTF_RIGHTDOWN
#define RightUp_click MOUSEEVENTF_RIGHTUP
